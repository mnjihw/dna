@page "/"


<div>
    <ul>
        <li>
            항목 ㅋ
            <MatIconButton>
                <MatIcon>
                    @MatIconNames.Close
                </MatIcon>
            </MatIconButton>
        </li>
    </ul>
</div>

<div>
    <MatAutocompleteList Items="@galleries" ShowClearButton="true" TItem="string" Label="갤러리 선택" />
    <MatTextField Label="엔터로 키워드 입력" @bind-Value="Keyword" @onkeydown="OnInputKeyDown" OnInput="@((ChangeEventArgs e) => Keyword = e.Value as string)" />
    <div>
        @for (int i = 0; i < list.Count; ++i)
        {
            int i2 = i;
            <MatAutocompleteList @onkeydown="func" OnTextChanged="@(s => OnTextChanged(s, i2))" TItem="string" ShowClearButton="true" Value="@list[i]" />
            //키보드 입력은 무시하고 X 누를 때만 호출되는 이벤트 찾기...
            @* OnTextChanged="@(s => OnTextChanged(s, i2))"*@
            <br />
        }
    </div>
    @{ lastIndex = -1;}


</div>



@code{
    private void f()
    { 
        Console.WriteLine("어 클릭함");
    }
    private string[] galleries = { "닌텐도", "프로그래밍" };
    private string Keyword { get; set; } 
    private List<string>
    list = new List<string>();
    private string SelectedKeyword { get; set; }
    private int lastIndex;
    private int tick;

    private void func() 
    {
        tick = Environment.TickCount;
    }
    private void OnTextChanged(string s, int index)
    {
        Console.WriteLine("인덱스" +index); 
        var delta = Environment.TickCount - tick;

        if (lastIndex == index) //이 메커니즘 수정해야함 여러번호출돼서 오동작   
        { 
            lastIndex = -1;   
            return; 
        } 
          
        lastIndex = index; 
        list[index] = s;

        if (delta > 100 && delta < int.MaxValue)
        {

            if (string.IsNullOrWhiteSpace(s))
            {
                list.Remove(s);
            }
        }
        foreach (var a in list)
            Console.WriteLine(a);


    }



    private void OnInputKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            if (!string.IsNullOrWhiteSpace(Keyword) && !list.Contains(Keyword))
            {
                list.Add(Keyword);
                Keyword = default;
            }
        }
    }
}
